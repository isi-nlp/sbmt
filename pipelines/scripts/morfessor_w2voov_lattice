#!/usr/bin/env python

import subprocess, os, sys, re, argparse


argparser = argparse.ArgumentParser()

argparser.add_argument('dict')
argparser.add_argument('--morfessor-command',dest='mcmd')
argparser.add_argument('--w2voov-command',dest='wcmd')

args = argparser.parse_args(sys.argv[1:])

digit = re.compile(r'\d+')

dictionary = set((v.strip() for v in open(args.dict)))
morfessor = subprocess.Popen(args.mcmd,shell=True,stdin=subprocess.PIPE,stdout=subprocess.PIPE)
w2voov = subprocess.Popen(args.wcmd,shell=True,stdin=subprocess.PIPE,stdout=subprocess.PIPE)

sentence_boundaries = set(['<foreign-sentence>', '</foreign-sentence>'])
escs = set(['"','\\'])

def cstr(s):
    news = ''
    for ss in s:
        if ss in escs:
            news += '\\'
        news += ss
    return news
n = 1
while True:
    line = sys.stdin.readline()
    if line == '':
        break
    line = line.strip()
    if line == '':
        continue
    vline = line.split()
    x = 0
    for v in vline:
        if v not in sentence_boundaries:
            morfessor.stdin.write(v + ' ')
    morfessor.stdin.write('\n')
    print 'lattice id="%s" {' % n,
    for v in vline:
        if v in sentence_boundaries:
            print '[%s,%s] "%s";' % (x,x+1,cstr(v)),
            x += 1
        else:
            indict = (digit.sub('@',v) in dictionary)
            oldx = x
            vmv = morfessor.stdout.readline().strip().split()
            if len(vmv) > 10:
                vmv = [ v ]
            if len(vmv) > 1:
                for vm in vmv:
                    print '[%s,%s] "%s" morf-token="10^-1" ' % (x,x+1,cstr(vm)),
                    if indict:
                        print 'morf-in-dict="10^-1" ',
                    print ';',
                    x += 1
                print '[%s,%s] "%s" orig-token="10^-1" ' % (oldx,x,cstr(v)),
                if indict:
                    print 'orig-in-dict="10^-1" ',
                print ';',
                if not indict:
                    w2voov.stdin.write(v+'\n')
                    ln = w2voov.stdout.readline().strip().split('\t')
                    if len(ln) == 3 and ln[0] != ln[2]:
                        print '[%s,%s] "%s" w2voov="10^-%s" ;' % (oldx,x,cstr(ln[2]),ln[1]), 
            else:
                print '[%s,%s] "%s" orig-token="10^-1" morf-token="10^-1" ' % (x,x+1,cstr(v)),
                if indict:
                    print 'morf-in-dict="10^-1" orig-in-dict="10^-1" ',
                print ';',
                if not indict:
                    w2voov.stdin.write(v+'\n')
                    ln = w2voov.stdout.readline().strip().split('\t')
                    if len(ln) == 3 and ln[0] != ln[2]:
                        print '[%s,%s] "%s" w2voov="10^-%s" ;' % (x,x+1,cstr(ln[2]),ln[1]),
                x += 1
    print '};'
    sys.stdout.flush()
    n += 1
morfessor.stdin.close()
            
